{
  "id": "regex id, STRING, 'stack-\\w{8}', required, example:stack-d901ce2b",
  "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', required, example:crayfish",
  "username": "base64 encoded username, STRING, required, example:eGppbW15",
  "version": "json format version, STRING, [2013-09-04], required",
  "state": "state of stack, STRING, [*Enabled|Removed], required",
  "region": "regex Region, STRING, '^(ap|us|eu|sa){1}-(south|east|west|north){1,2}-[0-9]{1}$', required, example:us-east-1",
  "platform": "support platform of region, STRING, [ec2-classic|ec2-vpc|default-vpc|custom-vpc], required",
  "description": "description of stack, STRING, not required",
  "owner": "base64 encoded owername(reserved for guest), STRING, not required",
  "key": "for thumbnail url of stack, not required, example:0KmcthfkEKGIHKgEov3Wbe4es3cqpF6Hw0hiCNbm0iXQYy8WGb6wNuF+mvqqPO5TdGFjayBrZXk=",
  "usage": "app usage, STRING, [production|development|testing|others], not required",
  "tag": "tag for stack(reserved), STRING, not required",
  "history": {
    "time": {
      "updated": 1386648015,
      "created": 1386647772
    }
  },
  "property": {
    "policy": {
      "ha": ""
    },
    "stoppable": true,
    "schedule": {
      "stop": {
        "run": null,
        "when": null,
        "during": null
      },
      "backup": {
        "when": null,
        "day": null
      },
      "start": {
        "when": null
      }
    },
    "lease": {
      "action": "",
      "length": null,
      "due": null
    }
  },
  "component": {
    "$AZ0": {
      "type": "Component type, STRING, [AWS.EC2.AvailabilityZone], required",
      "name": "regex az, STRING, '^(ap|us|eu|sa){1}-(south|east|west|north){1,2}-[0-9]{1}[a-z]{1}$', required, example:us-east-1a",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $AZ0",
      "resource": {
        "ZoneName": "regex az, STRING, '^(ap|us|eu|sa){1}-(south|east|west|north){1,2}-[0-9]{1}[a-z]{1}$', required, example:us-east-1a",
        "RegionName": "regex region, STRING, '^(ap|us|eu|sa){1}-(south|east|west|north){1,2}-[0-9]{1}$', required, example:us-east-1"
      }
    },
    "$INSTANCE0": {
      "type": "Component type, STRING, [AWS.EC2.Instance], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', required, example:host1",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $INSTANCE0",
      "index": "index of instance in server group, INT(>=0), required",
      "number": "instance number in server group, INT(>=1), required",
      "serverGroupUid": "server group uid, STRING, required, UID",
      "serverGroupName": "server group name, STRING, required, regex, ^\\w+[A-Za-z0-9-]*$, eg:host1",
      "#state": "Not necessary",
      "resource": {
        "InstanceId": "regex instance id(filled by RW), STRING, 'i-\\w{8}', not required",
        "ImageId": "regex ami id, STRING, 'ami-\\w{8}', required",
        "VpcId": "reference or regex vpc id, STRING, @xxxx.resource.xxxx or 'vpc-\\w{8}', not required",
        "SubnetId": "reference or regex subnet id, STRING, @xxxx.resource.xxxx or 'subnet-\\w{8}', not required",
        "KeyName": "reference, STRING, @xxxx.resource.xxxx, required, exmaple:@$DEFAULT-KP.resource.KeyName",
        "InstanceType": "Instance Type, STRING, example:[t1.micro|*m1.small|c1.medium|m2.xlarge|g2.2xlarge|hi1.4xlarge|...], required",
        "Monitoring": "Valid value, STRING, [*disabled,enabled], required",
        "Placement": {
          "AvailabilityZone": "reference, STRING, @xxxx.resource.xxxx, required, example:@$AZ0.resource.ZoneName",
          "Tenancy": "The tenancy of the instance(for vpc), STRING, [dedicated|*default], not required",
          "#GroupName": "Not necessary"
        },
        "EbsOptimized": "BOOLEAN, [true|*false], not required",
        "NetworkInterface": [],
        "BlockDeviceMapping": [
          "#$VOLUME0"
        ],
        "UserData": {
          "Base64Encoded": "BOOLEAN, [true|*false], required when 'Data' present",
          "Data": ""
        },
        "SecurityGroupId": [
          "reference, STRING, @xxxx.resource.xxxx, required for classic mode, example:@$DEFAULT-SG.resource.GroupId"
        ],
        "SecurityGroup": [
          "reference, STRING, @xxxx.resource.xxxx, required for classic mode, example:@$DEFAULT-SG.resource.GroupName"
        ],
        "DisableApiTermination": "BOOLEAN, [true|*false]",
        "ShutdownBehavior": "Not necessary, [*terminate|stop], see instanceInitiatedShutdownBehavior",
        "#PrivateIpAddress": "Not necessary",
        "#KernelId": "Not necessary",
        "#RamdiskId": "Not necessary"
      },
      "software: Not necessary": {}
    },
    "$VOLUME0": {
      "type": "Component type, STRING, [AWS.EC2.EBS.Volume], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', required, example:/dev/sdf",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $VOLUME0",
      "index": "index of volume in server group, INT(>=0), required",
      "number": "volume number in server group, INT(>=1), required",
      "serverGroupUid": "regex UID, STRING, example:$VOLUME0",
      "serverGroupName": "server group name, STRING, required, regex, '^\\w+[A-Za-z0-9-]*$', eg:/dev/sdf",
      "resource": {
        "VolumeId": "regex volume id(filled by RW), STRING, 'vol-\\w{8}', not required,",
        "Size": "INT, [1, 1024], required, example:1",
        "AvailabilityZone": "reference, STRING, @xxxx.resource.xxxx, required, example:@$AZ0.resource.ZoneName",
        "VolumeType": "STRING, [*standard|io1], required",
        "Iops": "INT, [100,2000], required when VolumeType is 'io1'",
        "SnapshotId": "regex snapshot id,'snap-\\w{8}', required when volume create from a snapshot",
        "#CreateTime": "Not necessary",
        "#Status": "Not necessary",
        "AttachmentSet": {
          "#VolumeId": "regex volume id,'vol-\\w{8}', not required, example:@$VOLUME0.resource.VolumeId",
          "Device": "required, example:/dev/sdf",
          "InstanceId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$INSTANCE0.resource.InstanceId",
          "?DeleteOnTermination": "Not necessary,[*true,false]",
          "#AttachTime": "Not necessary",
          "#Status": "Not necessary"
        }
      }
    },
    "$DEFAULT-SG": {
      "type": "Component type, STRING, [AWS.EC2.SecurityGroup], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'DefaultSG'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $DEFAULT-SG",
      "resource": {
        "GroupId": "regex SG ID(filled by RW), STRING, 'sg-\\w{8}', not required",
        "GroupName": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'DefaultSG'",
        "VpcId": "reference or regex vpc, STRING, @xxxx.resource.xxxx or 'vpc-\\w{8}', required for VPC, example:@$VPC.resource.VpcId",
        "IpPermissions": [
          {
            "IpRanges": "reference or sg id or account number or ip range, STRING, required, example:0.0.0.0/0",
            "IpProtocol": "STRING, [tcp|udp|icmp] for EC2, [tcp|udp|icmp|-1,65535] for VPC, required, example:tcp",
            "FromPort": "from port for tcp/udp, type for icmp, INT, [-1,65535], required, example:22",
            "ToPort": "to port for tcp/udp, code for icmp, INT, [-1,65535], required, example:22"
          }
        ],
        "IpPermissionsEgress": [],
        "#GroupDescription": "Not required",
        "#OwnerId": "Not necessary"
      }
    },
    "$DEFAULT-KP": {
      "type": "Component type, STRING, [AWS.EC2.KeyPair], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:DefaultKP",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $DEFAULT-KP",
      "resource": {
        "KeyFingerprint": "kp id(filled by RW), STRING, example:44:2c:71:09:92:15:9e:15:7c:38:ce:fc:34:f4:ac:8a:60:91:a9:2b",
        "KeyName": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:DefaultKP"
      }
    },
    "$EIP0": {
      "type": "Component type, STRING, [AWS.EC2.EIP], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $EIP0",
      "resource": {
        "PublicIp": "regex IP(filled by RW), STRING, '\\d+\\.\\d+\\.\\d+\\.\\d+', not required",
        "InstanceId": "reference, STRING, @xxxx.resource.xxxx, not required, example:@INSTANCE.resource.InstanceId",
        "NetworkInterfaceId": "reference, STRING, @xxxx.resource.xxxx, not required, example:@ENI0.resource.NetworkInterfaceId",
        "PrivateIpAddress": "reference eni private ip, STRING, @xxxx.resource.xxxx, not required, example:@ENI0.resource.PrivateIpAddressSet.0.PrivateIpAddress",
        "Domain": "STRING, [vpc|standard], not required, example:vpc",
        "AllocationId": "regex AllocationId, STRING, 'eipalloc-\\w{8}', not required",
        "#AssociationId": "Not necessary",
        "#NetworkInterfaceOwnerId": "Not necessary",
        "#AllowReassociation": "Not necessary"
      }
    },
    "$ENI0": {
      "type": "Component type, STRING, [AWS.VPC.NetworkInterface], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:eni0",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $ENI0",
      "index": "index of eni in server group, INT(>=0), required",
      "number": "eni number in server group, INT(>=1), required",
      "serverGroupUid": "server group uid, STRING, required, UID",
      "serverGroupName": "server group name, STRING, required, regex, ^\\w+[A-Za-z0-9-]*$, eg:eni0",
      "resource": {
        "NetworkInterfaceId": "regex  eni id(filled by RW), STRING, 'eni-\\w{8}', not required",
        "SubnetId": "reference or regex subnet, STRING, @xxxx.resource.xxxx or 'subnet-\\w{8}', not required, example:@$SUBNET0.resource.SubnetId",
        "VpcId": "reference or regex vpc, STRING, @xxxx.resource.xxxx or 'vpc-\\w{8}', not required, example:@$VPC.resource.VpcId",
        "AvailabilityZone": "reference, STRING, @xxxx.resource.xxxx, required, example:@$AZ0.resource.ZoneName",
        "SourceDestCheck": "BOOLEAN, [*true|false], required",
        "SecondPriIpCount": "INT, [0, 16], not required",
        "PrivateIpAddress": "regex IP, STRING, '\\d+\\.\\d+\\.\\d+\\.\\d+', not required",
        "AssociatePublicIpAddress": "BOOLEAN, [true|*false], not required",
        "GroupSet": [
          {
            "GroupId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$DEFAULT-SG.resource.GroupId",
            "GroupName": "reference, STRING, @xxxx.resource.xxxx, not required, example:@$DEFAULT-SG.resource.GroupName"
          },
          {
            "GroupId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$HOST-SG.resource.GroupId",
            "GroupName": "reference, STRING, @xxxx.resource.xxxx, not required, example:@$HOST-SG.resource.GroupName"
          }
        ],
        "PrivateIpAddressSet": [
          {
            "Primary": "BOOLEAN, [*true|false], required",
            "AutoAssign": "BOOLEAN, [*true|false], not required",
            "PrivateIpAddress": "regex IP, STRING, '\\d+\\.\\d+\\.\\d+\\.\\d+', not required, example:10.0.0.4",
            "?Association": {
              "InstanceId": "Not necessary",
              "AssociationID": "Not necessary",
              "PublicDnsName": "Not necessary",
              "IpOwnerId": "Not necessary",
              "PublicIp": "Not necessary",
              "AllocationID": "Not necessary"
            }
          }
        ],
        "Attachment": {
          "DeviceIndex": "INT, [0, 32], required, example:0",
          "InstanceId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$INSTANCE0.resource.InstanceId",
          "?AttachmentId": "Not necessary",
          "#AttachTime": "Not necessary"
        },
        "#PrivateDnsName": "Not necessary",
        "Description": "Not necessary",
        "#MacAddress": "Not necessary",
        "#RequestManaged": "Not necessary",
        "#RequestId": "Not necessary",
        "#OwnerId": "Not necessary",
        "#Status": "Not necessary"
      }
    },
    "$ELB0": {
      "type": "Component type, STRING, [AWS.ELB], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:load-balancer-1",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $ELB0",
      "resource": {
        "AvailabilityZones": [
          "reference, STRING, @xxxx.resource.xxxx, required, example:@$AZ0.resource.ZoneName",
          "reference, STRING, @xxxx.resource.xxxx, required, example:@$AZ1.resource.ZoneName"
        ],
        "CrossZoneLoadBalancing": "BOOLEAN, [true|*false], required",
        "Scheme": "STRING, [internal|internet-facing], required for vpc",
        "VpcId": "reference, STRING, @xxxx.resource.xxxx, 'regex vpc,vpc-\\w{8}', not required, example:@$VPC.resource.VpcId",
        "Subnets": [
          "reference or regex subnet, STRING, @xxxx.resource.xxxx or 'subnet-\\w{8}', not required, example:@$SUBNET0.resource.SubnetId",
          "reference or regex subnet, STRING, @xxxx.resource.xxxx or 'subnet-\\w{8}', not required, example:@$SUBNET1.resource.SubnetId"
        ],
        "SecurityGroups": [
          "reference, STRING, @xxxx.resource.xxxx, required for vpc, example:@$ELB0-SG.resource.GroupId"
        ],
        "Instances": [
          {
            "InstanceId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$INSTANCE0.resource.InstanceId"
          }
        ],
        "ListenerDescriptions": [
          {
            "Listener": {
              "InstancePort": "INT, [0, 65535], required, example:443",
              "Protocol": "STRING, [TCP|HTTP|HTTPS|SSL], required, example:SSL",
              "InstanceProtocol": "STRING, [TCP|HTTP|HTTPS|SSL], not required, example:SSL",
              "LoadBalancerPort": "INT, [0, 65535], required, example:443",
              "SSLCertificateId": "reference, STRING, required for HTTPS and SSL, example:@SERVER-CERTIFICATE.resource.ServerCertificateMetadata.Arn"
            },
            "#PolicyNames": "Not necessary"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "INT, [2, 10], required, example:9",
          "Interval": "INT, [30, 300], required, example:30",
          "Target": "protocol:port/path for ping, STRING, example:HTTP:80/index.html",
          "Timeout": "INT, [2, 60], required, example:5",
          "UnhealthyThreshold": "INT, [2, 10], required, example:4"
        },
        "BackendServerDescriptions": [
          {
            "?InstantPort": "INT, [0, 65535], not required",
            "?PoliciyNames": "Not required"
          }
        ],
        "DNSName": "Not required",
        "?Policies": {
          "LBCookieStickinessPolicies": [
            {
              "PolicyName": "Not required",
              "CookieExpirationPeriod": "Not necessary"
            }
          ],
          "AppCookieStickinessPolicies": [
            {
              "PolicyName": "Not required",
              "CookieName": "Not required"
            }
          ],
          "OtherPolicies": [
            {
              "PolicyName": "Not required",
              "PolicyTypeName": "Not required",
              "PolicyAttributes": {
                "AttributeName": "Not required",
                "AttributeValue": "Not required"
              },
              "LoadBalancerName": "Not required"
            }
          ]
        },
        "LoadBalancerName": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', required, example:load-balancer-1",
        "?SourceSecurityGroup": {
          "OwnerAlias": "Not necessary",
          "GroupName": "Not necessary"
        },
        "#CanonicalHostedZoneNameID": "Not necessary",
        "#CanonicalHostedZoneName": "Not necessary",
        "#CreatedTime": "Not necessary"
      }
    },
    "$SERVER-CERTIFICATE0": {
      "type": "Component type, STRING, [AWS.IAM.ServerCertificate], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'aaa'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $SERVER-CERTIFICATE0",
      "resource": {
        "PrivateKey": "required, example:-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----",
        "CertificateBody": "required, example:-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----",
        "CertificateChain": "Not required",
        "ServerCertificateMetadata": {
          "Arn": "Not required",
          "ServerCertificateId": "Not required",
          "ServerCertificateName": "Not required, example:aaa",
          "Path": "Not required",
          "UploadDate": "Not necessary"
        }
      }
    },
    "$VPC": {
      "type": "Component type, STRING, [AWS.VPC.VPC], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'vpc'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $VPC",
      "resource": {
        "VpcId": "regex vpc id(filled by RW), STRING, 'vpc-\\w{8}', not required",
        "EnableDnsSupport": "BOOLEAN, [*true|false], not required",
        "InstanceTenancy": "STRING ,[*default,dedicated], required",
        "EnableDnsHostnames": "BOOLEAN, [true|*false], not required",
        "DhcpOptionsId": "reference or [default], STRING, @xxxx.resource.xxxx, required, example:@$DHCP.resource.DhcpOptionsId",
        "CidrBlock": "regex IP range, STRING, '\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:10.0.0.0/16",
        "?IsDefault": "Not necessary, BOOLEAN [true,*false]",
        "#State": "Not necessary"
      }
    },
    "$DHCP": {
      "type": "Component type, STRING, [AWS.VPC.DhcpOptions], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:default",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $DHCP",
      "resource": {
        "VpcId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VPC.resource.VpcId",
        "DhcpOptionsId": "regex dhcp id(filled by RW), STRING, 'dopt-\\w{8}', not required",
        "DhcpConfigurationSet": [
          {
            "ValueSet": [
              {
                "Value": "madeiracloud.com"
              }
            ],
            "Key": "STRING, [domain-name-servers|domain-name|ntp-servers|netbios-name-servers], required, example:domain-name"
          },
          {
            "ValueSet": [
              {
                "Value": "AmazonProvidedDNS"
              }
            ],
            "Key": "STRING, [domain-name-servers|domain-name|ntp-servers|netbios-name-servers], required, example:domain-name-servers"
          },
          {
            "ValueSet": [
              {
                "Value": "211.98.26.2"
              }
            ],
            "Key": "STRING, [domain-name-servers|domain-name|ntp-servers|netbios-name-servers], required, example:ntp-servers"
          },
          {
            "ValueSet": [
              {
                "Value": "211.98.26.3"
              }
            ],
            "Key": "STRING, [domain-name-servers|domain-name|ntp-servers|netbios-name-servers], required, example:netbios-name-servers"
          }
        ]
      }
    },
    "$IGW": {
      "type": "Component type, STRING, [AWS.VPC.InternetGateway], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'Internet-gateway'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $IGW",
      "resource": {
        "InternetGatewayId": "regex IGW id(filled by RW), STRING, 'igw-\\w{8}', not required",
        "AttachmentSet": [
          {
            "#State": "Not necessary, STRING, example:'available'",
            "VpcId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VPC.resource.VpcId"
          }
        ]
      }
    },
    "$VGW": {
      "type": "Component type, STRING, [AWS.VPC.VPNGateway], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'VPN-gateway'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $VGW",
      "resource": {
        "VpnGatewayId": "regex VGW id(filled by RW), STRING, 'vgw-\\w{8}', not required",
        "#State": "Not necessary, STRING, example:'available'",
        "AvailabilityZone": "reference, STRING, @xxxx.resource.xxxx, not required, example:@AZ.resource.ZoneName",
        "Type": "STRING, [ipsec.1], not required, example:ipsec.1",
        "Attachments": [
          {
            "VpcId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VPC.resource.VpcId",
            "#State": "Not necessary, example:'attached'"
          }
        ]
      }
    },
    "$SUBNET0": {
      "type": "Component type, STRING, [AWS.VPC.Subnet], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:subnet1",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, example:$SUBNET0",
      "resource": {
        "SubnetId": "regex subnet(filled by RW), STRING, 'subnet-\\w{8}', not required",
        "VpcId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VPC.resource.VpcId",
        "AvailabilityZone": "reference, STRING, @xxxx.resource.xxxx, required, example:@AZ.resource.ZoneName",
        "CidrBlock": "regex IP range, STRING, '\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:'10.0.0.0/24'",
        "#AvailableIpAddressCount": "Not necessary",
        "#State": "Not necessary"
      }
    },
    "$ROUTETABLE0": {
      "type": "Component type, STRING, [AWS.VPC.RouteTable], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'RT-1'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $ROUTETABLE0",
      "resource": {
        "RouteTableId": "regex RT id(filled by RW), STRING, 'rtb-\\w{8}', not required",
        "VpcId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VPC.resource.VpcId",
        "PropagatingVgwSet": [
          "reference, STRING, @xxxx.resource.xxxx, not required, @$VGW.resource.VpnGatewayId"
        ],
        "RouteSet": [
          {
            "Origin": "STRING, [CreateRouteTable] when GatewayId is 'default'",
            "DestinationCidrBlock": "regex IP range, STRING, '\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:'10.0.0.0/16'",
            "InstanceId": "STRING, '' when GatewayId is 'default'",
            "NetworkInterfaceId": "STRING, '' when GatewayId is 'default'",
            "GatewayId": "the default item, STRING, [local], required",
            "#State": "?Not necessary, example:'active'",
            "#InstanceOwnerId": "Not necessary"
          },
          {
            "Origin": "STRING, '' when route to instance",
            "DestinationCidrBlock": "regex IP range,'\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:'192.168.1.1/24'",
            "InstanceId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$INSTANCE0.resource.InstanceId",
            "NetworkInterfaceId": "STRING, '' when route to instance",
            "GatewayId": "STRING, '' when route to instance",
            "#State": "Not necessary",
            "#InstanceOwnerId": "Not necessary"
          },
          {
            "Origin": "STRING, '' when route to IGW/VGW",
            "DestinationCidrBlock": "regex IP range,'\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:'0.0.0.0/0'",
            "InstanceId": "STRING, '' when route to IGW/VGW",
            "NetworkInterfaceId": "STRING, '' when route to IGW/VGW",
            "GatewayId": "reference, STRING, @xxxx.resource.xxxx,or  Valid value,'local', not required, example:@$IGW.resource.InternetGatewayId",
            "#State": "Not necessary",
            "# InstanceOwnerId": "Not necessary"
          },
          {
            "Origin": "STRING, '' when route to ENI",
            "DestinationCidrBlock": "regex IP range,'\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:'192.168.20.0/24'",
            "InstanceId": "STRING, '' when route to ENI",
            "NetworkInterfaceId": "reference, STRING, @xxxx.resource.xxxx, not required, example:@$ENI1.resource.NetworkInterfaceId",
            "GatewayId": "STRING, '' when route to ENI",
            "#State": "Not necessary",
            "#InstanceOwnerId": "Not necessary"
          }
        ],
        "AssociationSet": [
          {
            "Main": "BOOLEAN, [true|false], not required, example:true",
            "SubnetId": "reference to subnet id or empty, STRING, @xxxx.resource.xxxx, required when Main is false",
            "#RouteTableId": "Not necessary",
            "#RouteTableAssociationId": "Not necessary"
          }
        ]
      }
    },
    "$DEFAULT-ACL": {
      "type": "Component type, STRING, [AWS.VPC.NetworkAcl], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'DefaultACL'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $DEFAULT-ACL",
      "resource": {
        "NetworkAclId": "regex ACL(filled by RW), STRING, 'acl-\\w{8}', not required",
        "VpcId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VPC.resource.VpcId",
        "Default": "BOOLEAN, [true|false], required",
        "RouteTableId": "?",
        "EntrySet": [
          {
            "IcmpTypeCode": {
              "Code": "INT, [-1, 40], not required",
              "Type": "INT, [-1, 255], not required"
            },
            "RuleNumber": "INT, [1, 32767], required, example:100",
            "Protocol": "INT, [-1, 255], required, example:-1",
            "Egress": "BOOLEAN, [true|false], required, example:true",
            "RuleAction": "STRING, [allow|deny], required, example:allow",
            "CidrBlock": "reference or regex IP range, STRING, @xxxx.resource.xxxx or '\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:0.0.0.0/0",
            "PortRange": {
              "To": "INT, [0, 65535], not required",
              "From": "INT, [0, 65535], not required"
            }
          },
          {
            "IcmpTypeCode": {
              "Code": "INT, [-1, 40], not required",
              "Type": "INT, [-1, 255], not required"
            },
            "RuleNumber": "INT, [1, 32767], required, example:32767",
            "Protocol": "INT, [-1, 255], required, example:-1",
            "PortRange": {
              "To": "",
              "From": ""
            },
            "Egress": "BOOLEAN, [true|false], required, example:true",
            "RuleAction": "STRING, [allow|deny], required, example:allow",
            "CidrBlock": "reference or regex IP range, STRING, @xxxx.resource.xxxx or '\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:0.0.0.0/0"
          }
        ],
        "AssociationSet": [
          {
            "SubnetId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$SUBNET0.resource.SubnetId",
            "NetworkAclAssociationId": "regex acl assoc id(filled by RW), STRING, 'aclassoc-\\w{8}', not required",
            "#NetworkAclId": "Not necessary"
          },
          {
            "SubnetId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$SUBNET1.resource.SubnetId",
            "NetworkAclAssociationId": "regex acl assoc id(filled by RW), STRING, 'aclassoc-\\w{8}', not required",
            "NetworkAclId": "Not necessary"
          }
        ]
      }
    },
    "$VPN0": {
      "type": "Component type, STRING, [AWS.VPC.VPNConnection], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'VPN'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $VPN0",
      "resource": {
        "VpnConnectionId": "regex VPN ID(filled by RW), STRING, 'vpn-\\w{8}', not required",
        "VpnGatewayId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$VGW.resource.VpnGatewayId",
        "CustomerGatewayId": "reference, STRING, @xxxx.resource.xxxx, required, example:@$CGW0.resource.CustomerGatewayId",
        "Routes": [
          {
            "DestinationCidrBlock": "regex IP range,'\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+', required, example:'192.168.1.0/24'",
            "Source": "Not necessary",
            "#State": "Not necessary"
          }
        ],
        "VgwTelemetry": {
          "LastStatusChange": "Not necessary",
          "AcceptRouteCount": "Not necessary",
          "OutsideIpAddress": "Not necessary",
          "StatusMessage": "Not necessary",
          "Status": "Not necessary"
        },
        "Type": "STRING, [ipsec.1], not required, example:ipsec.1",
        "Options": {
          "StaticRoutesOnly": "BOOLEAN, [*true|false], required"
        },
        "#State": "Not necessary",
        "#CustomerGatewayConfiguration": "Not necessary"
      }
    },
    "$CGW0": {
      "type": "Component type, STRING, [AWS.VPC.CustomerGateway], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'customer-gateway-1'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $CGW0",
      "resource": {
        "CustomerGatewayId": "regex CGW(filled by RW), STRING, 'cgw-\\w{8}', not required",
        "IpAddress": "regex IP,'\\d+\\.\\d+\\.\\d+\\.\\d+', required, example:'211.98.26.10'",
        "Type": "STRING, [ipsec.1], not required, example:ipsec.1",
        "BgpAsn": "INT, [1, 4294967295], not required",
        "#State": "Not necessary, exmaple:'available'"
      }
    },
    "$ASG0": {
      "type": "Component type, STRING, [AWS.AutoScaling.Group], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'asg1'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $ASG0",
      "resource": {
        "AutoScalingGroupARN": "regex ARN(filled by RW), STRING, '^arn:aws:\\w+:[a-zA-Z0-9-]*:[0-9]*:', not required",
        "AutoScalingGroupName": "?regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'asg1'",
        "LaunchConfigurationName": "reference, required, example:@$LAUNCH-CONFIGURATION0.resource.LaunchConfigurationName",
        "MinSize": "INT, [0, 65534], required, example:1",
        "MaxSize": "INT, [0, 65534], required, example:2",
        "VPCZoneIdentifier": "reference, STRING, @xxxx.resource.xxxx, required for VPC, example:'@$SUBNET0.resource.SubnetId,@$SUBNET1.resource.SubnetId'",
        "AvailabilityZones": [
          "Not required, reference, STRING, @xxxx.resource.xxxx, example:@AZ.resource.ZoneName",
          "Not required, reference, STRING, @xxxx.resource.xxxx, example:@AZ.resource.ZoneName"
        ],
        "LoadBalancerNames": [
          "reference,　not required, example:@$ELB0.resource.LoadBalancerName"
        ],
        "Instances ?": [],
        "InstanceId": "?",
        "TerminationPolicies": [
          "['OldestInstance', 'NewestInstance', 'OldestLaunchConfiguration', 'ClosestToNextInstanceHour', 'Default'], not required, example:'Default'"
        ],
        "HealthCheckGracePeriod": "INT, [0, 86400], not required, example:300",
        "HealthCheckType": "STRING, [EC2|ELB], not required, example:'EC2'",
        "DesiredCapacity": "INT, [0, 65534], not required, example:1",
        "DefaultCooldown": "INT, [0, 86400], not required, example:300",
        "SuspendedProcesses": [
          {
            "ProcessName": "Not necessary",
            "SuspensionReason": "Not necessary"
          }
        ],
        "EnabledMetrics": [
          {
            "Metric": "Not necessary",
            "Granularity": "Not necessary"
          }
        ],
        "#Status": "Not necessary",
        "PlacementGroup": "Not necessary",
        "#CreatedTime": "Not necessary",
        "ShouldDecrementDesiredCapacity": "",
        "Tags": "?"
      }
    },
    "$LAUNCH-CONFIGURATION0": {
      "type": "Component type, STRING, [AWS.AutoScaling.LaunchConfiguration], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'launch-config-1'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $LAUNCH-CONFIGURATION0",
      "resource": {
        "LaunchConfigurationARN": "regex LC(filled by RW), STRING, '^arn:aws:\\w+:[a-zA-Z0-9-]*:[0-9]*:', not required",
        "LaunchConfigurationName": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', required, example：launch-config-1",
        "ImageId": "regex AMI, '^ami-\\w{8}$', required, example:ami-cde4bca4",
        "InstanceType": "Instance Type, STRING, example:[t1.micro|*m1.small|c1.medium|m2.xlarge|g2.2xlarge|hi1.4xlarge|...], required",
        "SecurityGroups": [
          "reference, STRING, @xxxx.resource.xxxx, required, example:@$DEFAULT-SG.resource.GroupId"
        ],
        "KeyName": "reference,STRING, @xxxx.resource.xxxx, required, @$DEFAULT-KP.resource.KeyName",
        "EbsOptimized": "BOOLEAN, [true|false], not required",
        "InstanceMonitoring": "BOOLEAN, [true|false], not required",
        "BlockDeviceMapping": [
          {
            "DeviceName": "required, example:'/dev/sdf'",
            "Ebs": {
              "VolumeSize": "?required, example:1"
            }
          }
        ],
        "IamInstanceProfile": "Not necessary",
        "UserData": "Not required",
        "SpotPrice": "Not necessary",
        "#CreatedTime": "Not necessary",
        "#KernelId": "Not necessary",
        "#RamdiskId": "Not necessary"
      }
    },
    "$CLOUD-WATCH0": {
      "type": "Component type, STRING, [AWS.CloudWatch.CloudWatch], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:'asg1-policy-1-alarm'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $CLOUD-WATCH0",
      "resource": {
        "AlarmArn": "regex ARN(?filled by RW), STRING, not required",
        "AlarmName": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', required, example:asg1-policy-1-alarm",
        "EvaluationPeriods": "INT, [1, 86400], not required, example:2",
        "Namespace": "STRING, [AWS/AutoScaling|AWS/EC2|AWS/ELB], required, example:AWS/AutoScaling",
        "MetricName": "regex name, STRING, [CPUUtilization|DiskReadBytes|DiskReadOps|DiskWriteBytes|DiskWriteOps|NetworkIn|NetworkOut|StatusCheckFailed|StatusCheckFailed_Instance|StatusCheckFailed_System], required, example:CPUUtilization",
        "Threshold": "?corresponding value, example:int, required, example:1",
        "Statistic": "STRING, [Average|SampleCount|Sum|Minimum|Maximum], required, example:Average",
        "Dimensions": [
          {
            "name": "STRING, [AutoScalingGroupName], required, example:AutoScalingGroupName",
            "value": "reference, STRING, @xxxx.resource.xxxx, required, example:@$ASG0.resource.AutoScalingGroupName"
          }
        ],
        "Period": "INT, [1, 86400], not required, example:300",
        "ComparisonOperator": "STRING, [<=|<|>|>=], not required, example:>=",
        "OKAction : ?reference, not required": [],
        "InsufficientDataActions: ?reference, not required": [],
        "Unit": "Not required",
        "StateValue": "Not necessary",
        "StateUpdateTimestamp": "Not necessary",
        "ActionEnabled": "Not required",
        "StateReason": "Not necessary",
        "StateReasonData": "Not necessary",
        "AlarmDescription": "Not required",
        "AlarmConfigurationUpdatedTimestamp": "Not necessary",
        "AlarmActions": [
          "Not required, STRING, @xxxx.resource.xxxx, example:@$SCALING-POLICY0.resource.PolicyARN"
        ]
      }
    },
    "$SCALING-POLICY0": {
      "type": "Component type, STRING, [AWS.AutoScaling.ScalingPolicy], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:'asg1-policy-1'",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $SCALING-POLICY0",
      "resource": {
        "PolicyARN": "regex ARN(?filled by RW), STRING, not required",
        "PolicyName": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$, required', example:asg1-policy-1",
        "AutoScalingGroupName": "reference, STRING, @xxxx.resource.xxxx, required, example:@$ASG0.resource.AutoScalingGroupName",
        "ScalingAdjustment": "INT, [-65534, 65534], required, example:1",
        "AdjustmentType": "STRING, [ChangeInCapacity|ExactCapacity|PercentChangeInCapacity], required, example:ChangeInCapacity",
        "MinAdjustmentStep": "INT, [-65534, 65534], not required",
        "Cooldown": "INT, [0, 86400], not required",
        "Alarms ?": [
          {
            "AlarmName": "",
            "AlarmARN": ""
          }
        ]
      }
    },
    "$NOTIFICATION-CONFIGURATION0": {
      "type": "Component type, STRING, [AWS.AutoScaling.NotificationConfiguration], required",
      "name": "?regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required",
      "uid": "regex UID, STRING, '^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$', required, same to $NOTIFICATION-CONFIGURATION0",
      "resource": {
        "TopicARN": "reference, STRING, @xxxx.resource.xxxx, required, example:@$TOPIC.resource.TopicArn",
        "AutoScalingGroupName": "reference, STRING, @xxxx.resource.xxxx, required, example:@$ASG0.resource.AutoScalingGroupName",
        "NotificationType": [
          "STRING,  [autoscaling:EC2_INSTANCE_LAUNCH|autoscaling:EC2_INSTANCE_LAUNCH_ERROR|autoscaling:EC2_INSTANCE_TERMINATE|autoscaling:EC2_INSTANCE_TERMINATE_ERROR|autoscaling:TEST_NOTIFICATION], required, example:autoscaling:EC2_INSTANCE_LAUNCH"
        ]
      }
    },
    "$TOPIC": {
      "type": "Component type, STRING, [AWS.SNS.Topic], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required, example:sns-topic",
      "uid": "regex uid, same to $TOPIC",
      "resource": {
        "TopicArn": "regex ARN(?filled by RW), STRING, not required",
        "Name": "regex name, required, example:sns-topic",
        "DisplayName": "?regex name, required, example:sns-topic",
        "Policy": "?Not necessary",
        "DeliveryPolicy": "?Not necessary"
      }
    },
    "$SUBSCRIPTION0": {
      "type": "Component type, STRING, [AWS.SNS.Subscription], required",
      "name": "regex name, STRING, '^\\w+[A-Za-z0-9-]*$', not required",
      "uid": "regex uid, required, same to $SUBSCRIPTION1",
      "resource": {
        "SubscriptionArn": "regex ARN(?filled by RW), STRING, not required",
        "TopicArn": "referenceTopicArn, required, example:@$TOPIC.resource.TopicArn",
        "Protocol": "STRING, [https|http|sms|email|email-json], required, example:email",
        "Endpoint": "STRING, required, example:xjimmyshcn@gmail.com",
        "DeliveryPolicy": "?Not necessary"
      }
    },
    "$EC2-TAG": {
      "type": "Component type, STRING, [AWS.EC2.Tag], required",
      "resource": [
        {
          "ResourceIds": [
            "reference, STRING, @xxxx.resource.xxxx, required, example:@$DEFAULT-ACL.resource.NetworkAclId",
            "example:@$IGW.resource.InternetGatewayId",
            "example:@$SUBNET0.resource.SubnetId",
            "example:@$VPC.resource.VpcId",
            "example:@$SUBNET1.resource.SubnetId",
            "example:@$CGW.resource.CustomerGatewayId",
            "example:@$VOLUME0.resource.VolumeId",
            "example:@$VGW.resource.VpnGatewayId",
            "example:@$ENI0.resource.NetworkInterfaceId",
            "example:@$INSTANCE0.resource.InstanceId",
            "example:@$VPN0.resource.VpnConnectionId",
            "example:@$ENI1.resource.NetworkInterfaceId",
            "example:@$ROUTETABLE0.resource.RouteTableId"
          ],
          "Key": "STRING, [Created by|app|app-id|Name|name], required",
          "Value": "STRING, example:xjimmy"
        }
      ]
    },
    "$ASG-TAG": {
      "type": "Component type, STRING, [AWS.AutoScaling.Tag], required",
      "resource": [
        {
          "ResourceIds": [
            "reference, STRING, @xxxx.resource.xxxx, required, example:@$ASG0.resource.AutoScalingGroupName"
          ],
          "PropagateAtLaunch": "BOOLEAN, [true|false]",
          "Key": "tag key, STRING, [aws:autoscaling:groupName|Created by|app|app-id|Name|name], required",
          "Value": "tag value, STRING, example::xjimmy"
        },
        {
          "ResourceIds": [
            "reference, STRING, @xxxx.resource.xxxx, required, @$ASG0.resource.AutoScalingGroupName"
          ],
          "PropagateAtLaunch": "[true|false]",
          "Key": "tag key, STRING, [aws:autoscaling:groupName|Created by|app|app-id|Name|name], required",
          "Value": "tag value, STRING, example:all-aws-resource"
        }
      ]
    }
  },
  "layout": {
    "component": {
      "node": {
        "$INSTANCE0": {
          "coordinate": [
            27,
            22
          ],
          "virtualizationType": "paravirtual",
          "osFamily": "linux",
          "uid": "$INSTANCE0",
          "instanceList": [
            "$INSTANCE0"
          ],
          "groupUId": "$SUBNET0",
          "volumeList": {
            "$VOLUME0": [
              "$VOLUME0"
            ]
          },
          "eipList": [
            "$EIP0"
          ],
          "connection": [
            {
              "target": "$ROUTETABLE0",
              "port": "instance-rtb",
              "line": "0EE2F884-BC0D-4793-9919-CB3C9732F25B"
            },
            {
              "target": "$ELB0",
              "port": "instance-sg",
              "line": "80447053-9AC3-4CBF-8B5B-60D254CB86F7"
            },
            {
              "target": "$ENI1",
              "port": "instance-attach",
              "line": "0E2BEED8-072E-4EFB-B2DA-986C8806BA08"
            },
            {
              "target": "$LAUNCH-CONFIGURATION0",
              "port": "instance-sg",
              "line": "29CCCE1E-36C0-43F1-A607-44CC495AD2EE"
            },
            {
              "target": "3E2E3F46-49C8-4541-A5F4-04D5219213A8",
              "port": "instance-sg",
              "line": "DA783FB7-5E14-4C8E-9554-5A6A7C2E4EA1"
            }
          ],
          "architecture": "i386",
          "rootDeviceType": "ebs",
          "eniList": [
            "$ENI0"
          ],
          "type": "AWS.EC2.Instance",
          "osType": "amazon"
        },
        "$ENI1": {
          "uid": "$ENI1",
          "groupUId": "$SUBNET0",
          "eipList": {},
          "connection": [
            {
              "target": "$ROUTETABLE0",
              "port": "eni-rtb",
              "line": "94DD35D3-0EA5-4932-BC21-C4CE4E8291C9"
            },
            {
              "target": "$INSTANCE0",
              "port": "eni-attach",
              "line": "0E2BEED8-072E-4EFB-B2DA-986C8806BA08"
            }
          ],
          "coordinate": [
            45,
            22
          ],
          "eniList": [
            "$ENI1"
          ],
          "type": "AWS.VPC.NetworkInterface"
        },
        "$IGW": {
          "coordinate": [
            1,
            12
          ],
          "connection": [
            {
              "target": "$ROUTETABLE0",
              "port": "igw-tgt",
              "line": "98A434AC-2190-4E12-BECA-A77DB9DE7169"
            }
          ],
          "type": "AWS.VPC.InternetGateway",
          "uid": "$IGW",
          "groupUId": "$VPC"
        },
        "$VGW": {
          "coordinate": [
            60,
            9
          ],
          "connection": [
            {
              "target": "$ROUTETABLE0",
              "port": "vgw-tgt",
              "line": "B50348D9-797E-46FF-99CE-6C0460480492"
            },
            {
              "target": "$CGW0",
              "port": "vgw-vpn",
              "line": "3BB564AC-0CE4-4271-B843-95C0ACBEF4CB"
            },
            {
              "target": "$CGW1",
              "port": "vgw-vpn",
              "line": "40B99F23-CBDE-48E1-B71E-59DE2F7437A0"
            }
          ],
          "type": "AWS.VPC.VPNGateway",
          "uid": "$VGW",
          "groupUId": "$VPC"
        },
        "$CGW0": {
          "uid": "$CGW0",
          "type": "AWS.VPC.CustomerGateway",
          "groupUId": "",
          "connection": [
            {
              "target": "$VGW",
              "port": "cgw-vpn",
              "line": "3BB564AC-0CE4-4271-B843-95C0ACBEF4CB"
            }
          ],
          "coordinate": [
            71,
            7
          ],
          "networkName": "customer-gateway-1"
        },
        "$CGW1": {
          "uid": "$CGW1",
          "type": "AWS.VPC.CustomerGateway",
          "groupUId": "",
          "connection": [
            {
              "target": "$VGW",
              "port": "cgw-vpn",
              "line": "40B99F23-CBDE-48E1-B71E-59DE2F7437A0"
            }
          ],
          "coordinate": [
            71,
            22
          ],
          "networkName": "customer-gateway-2"
        },
        "$ROUTETABLE0": {
          "coordinate": [
            36,
            5
          ],
          "connection": [
            {
              "target": "$INSTANCE0",
              "port": "rtb-tgt",
              "line": "0EE2F884-BC0D-4793-9919-CB3C9732F25B"
            },
            {
              "target": "$IGW",
              "port": "rtb-tgt",
              "line": "98A434AC-2190-4E12-BECA-A77DB9DE7169"
            },
            {
              "target": "$VGW",
              "port": "rtb-tgt",
              "line": "B50348D9-797E-46FF-99CE-6C0460480492"
            },
            {
              "target": "$ENI1",
              "port": "rtb-tgt",
              "line": "94DD35D3-0EA5-4932-BC21-C4CE4E8291C9"
            },
            {
              "target": "$SUBNET1",
              "port": "rtb-src",
              "line": "5B03ECF5-C3F0-45FE-AB17-2650CCEE6D88"
            },
            {
              "target": "$SUBNET0",
              "port": "rtb-src",
              "line": "F5F203E4-6B77-4A08-B73F-9C29E2AE5ADD"
            }
          ],
          "type": "AWS.VPC.RouteTable",
          "uid": "$ROUTETABLE0",
          "groupUId": "$VPC"
        },
        "$ELB0": {
          "coordinate": [
            8,
            47
          ],
          "connection": [
            {
              "target": "$LAUNCH-CONFIGURATION0",
              "port": "elb-sg-out",
              "line": "A2FD9CF0-DF6F-4E76-AB4F-E53E6D24425B"
            },
            {
              "target": "3E2E3F46-49C8-4541-A5F4-04D5219213A8",
              "port": "elb-sg-out",
              "line": "91CCE648-293F-45E4-B45A-5CB35D5C46B2"
            },
            {
              "target": "$INSTANCE0",
              "port": "elb-sg-out",
              "line": "80447053-9AC3-4CBF-8B5B-60D254CB86F7"
            },
            {
              "target": "$SUBNET0",
              "port": "elb-assoc",
              "line": "0693B58C-3C96-40CB-A3B1-9DCFCCF2F541"
            },
            {
              "target": "$SUBNET1",
              "port": "elb-assoc",
              "line": "F803512F-02FB-4EDF-93A9-965545F18581"
            }
          ],
          "type": "AWS.ELB",
          "uid": "$ELB0",
          "groupUId": "$VPC"
        },
        "$LAUNCH-CONFIGURATION0": {
          "virtualizationType": "paravirtual",
          "osFamily": "linux",
          "uid": "$LAUNCH-CONFIGURATION0",
          "originalId": "$LAUNCH-CONFIGURATION0",
          "groupUId": "$ASG0",
          "coordinate": [
            30,
            34
          ],
          "connection": [
            {
              "target": "$ELB0",
              "port": "launchconfig-sg",
              "line": "A2FD9CF0-DF6F-4E76-AB4F-E53E6D24425B"
            },
            {
              "target": "$INSTANCE0",
              "port": "launchconfig-sg",
              "line": "29CCCE1E-36C0-43F1-A607-44CC495AD2EE"
            }
          ],
          "architecture": "i386",
          "rootDeviceType": "ebs",
          "type": "AWS.AutoScaling.LaunchConfiguration",
          "osType": "amazon"
        }
      },
      "group": {
        "E7187718-1D22-47E1-B4C6-F368AD95BCFF": {
          "uid": "E7187718-1D22-47E1-B4C6-F368AD95BCFF",
          "groupUId": "$VPC",
          "name": "us-east-1a",
          "coordinate": [
            23,
            17
          ],
          "type": "AWS.EC2.AvailabilityZone",
          "size": [
            36,
            31
          ],
          "connection": []
        },
        "3E2E3F46-49C8-4541-A5F4-04D5219213A8": {
          "uid": "3E2E3F46-49C8-4541-A5F4-04D5219213A8",
          "originalId": "$ASG0",
          "groupUId": "$SUBNET1",
          "connection": [
            {
              "target": "$ELB0",
              "port": "launchconfig-sg",
              "line": "91CCE648-293F-45E4-B45A-5CB35D5C46B2"
            },
            {
              "target": "$INSTANCE0",
              "port": "launchconfig-sg",
              "line": "DA783FB7-5E14-4C8E-9554-5A6A7C2E4EA1"
            }
          ],
          "coordinate": [
            28,
            57
          ],
          "type": "AWS.AutoScaling.Group",
          "size": [
            13,
            13
          ]
        },
        "$ASG0": {
          "uid": "$ASG0",
          "originalId": "",
          "groupUId": "$SUBNET0",
          "connection": [],
          "coordinate": [
            28,
            31
          ],
          "type": "AWS.AutoScaling.Group",
          "size": [
            13,
            13
          ]
        },
        "D684877A-2EF5-4B80-AC22-3A211B45045E": {
          "uid": "D684877A-2EF5-4B80-AC22-3A211B45045E",
          "groupUId": "$VPC",
          "name": "us-east-1b",
          "coordinate": [
            23,
            53
          ],
          "type": "AWS.EC2.AvailabilityZone",
          "size": [
            36,
            21
          ],
          "connection": []
        },
        "$SUBNET0": {
          "uid": "$SUBNET0",
          "groupUId": "E7187718-1D22-47E1-B4C6-F368AD95BCFF",
          "connection": [
            {
              "target": "$ELB0",
              "port": "subnet-assoc-in",
              "line": "0693B58C-3C96-40CB-A3B1-9DCFCCF2F541"
            },
            {
              "target": "$ROUTETABLE0",
              "port": "subnet-assoc-out",
              "line": "F5F203E4-6B77-4A08-B73F-9C29E2AE5ADD"
            }
          ],
          "coordinate": [
            25,
            19
          ],
          "type": "AWS.VPC.Subnet",
          "size": [
            32,
            27
          ]
        },
        "$VPC": {
          "coordinate": [
            5,
            3
          ],
          "connection": [],
          "type": "AWS.VPC.VPC",
          "uid": "$VPC",
          "size": [
            59,
            73
          ]
        },
        "$SUBNET1": {
          "uid": "$SUBNET1",
          "groupUId": "D684877A-2EF5-4B80-AC22-3A211B45045E",
          "connection": [
            {
              "target": "$ROUTETABLE0",
              "port": "subnet-assoc-out",
              "line": "5B03ECF5-C3F0-45FE-AB17-2650CCEE6D88"
            },
            {
              "target": "$ELB0",
              "port": "subnet-assoc-in",
              "line": "F803512F-02FB-4EDF-93A9-965545F18581"
            }
          ],
          "coordinate": [
            25,
            55
          ],
          "type": "AWS.VPC.Subnet",
          "size": [
            32,
            17
          ]
        }
      }
    },
    "size": [
      240,
      240
    ],
    "connection : not store in mongo": {
      "0EE2F884-BC0D-4793-9919-CB3C9732F25B": {
        "target": {
          "$INSTANCE0": "instance-rtb",
          "$ROUTETABLE0": "rtb-tgt"
        },
        "auto": true,
        "point": [],
        "type": "rtb-target"
      },
      "98A434AC-2190-4E12-BECA-A77DB9DE7169": {
        "target": {
          "$IGW": "igw-tgt",
          "$ROUTETABLE0": "rtb-tgt"
        },
        "auto": true,
        "point": [],
        "type": "rtb-target"
      },
      "B50348D9-797E-46FF-99CE-6C0460480492": {
        "target": {
          "$VGW": "vgw-tgt",
          "$ROUTETABLE0": "rtb-tgt"
        },
        "auto": true,
        "point": [],
        "type": "rtb-target"
      },
      "94DD35D3-0EA5-4932-BC21-C4CE4E8291C9": {
        "target": {
          "$ENI1": "eni-rtb",
          "$ROUTETABLE0": "rtb-tgt"
        },
        "auto": true,
        "point": [],
        "type": "rtb-target"
      },
      "3BB564AC-0CE4-4271-B843-95C0ACBEF4CB": {
        "target": {
          "$CGW0": "cgw-vpn",
          "$VGW": "vgw-vpn"
        },
        "auto": true,
        "point": [],
        "type": "vpn"
      },
      "5B03ECF5-C3F0-45FE-AB17-2650CCEE6D88": {
        "target": {
          "$SUBNET1": "subnet-assoc-out",
          "$ROUTETABLE0": "rtb-src"
        },
        "auto": true,
        "point": [],
        "type": "association"
      },
      "A2FD9CF0-DF6F-4E76-AB4F-E53E6D24425B": {
        "target": {
          "$LAUNCH-CONFIGURATION0": "launchconfig-sg",
          "$ELB0": "elb-sg-out"
        },
        "auto": true,
        "point": [],
        "type": "elb-sg"
      },
      "91CCE648-293F-45E4-B45A-5CB35D5C46B2": {
        "target": {
          "3E2E3F46-49C8-4541-A5F4-04D5219213A8": "launchconfig-sg",
          "$ELB0": "elb-sg-out"
        },
        "auto": true,
        "point": [],
        "type": "elb-sg"
      },
      "80447053-9AC3-4CBF-8B5B-60D254CB86F7": {
        "target": {
          "$ELB0": "elb-sg-out",
          "$INSTANCE0": "instance-sg"
        },
        "auto": true,
        "point": [],
        "type": "elb-sg"
      },
      "0693B58C-3C96-40CB-A3B1-9DCFCCF2F541": {
        "target": {
          "$ELB0": "elb-assoc",
          "$SUBNET0": "subnet-assoc-in"
        },
        "auto": true,
        "point": [],
        "type": "association"
      },
      "F803512F-02FB-4EDF-93A9-965545F18581": {
        "target": {
          "$ELB0": "elb-assoc",
          "$SUBNET1": "subnet-assoc-in"
        },
        "auto": true,
        "point": [],
        "type": "association"
      },
      "0E2BEED8-072E-4EFB-B2DA-986C8806BA08": {
        "target": {
          "$ENI1": "eni-attach",
          "$INSTANCE0": "instance-attach"
        },
        "auto": true,
        "point": [],
        "type": "attachment"
      },
      "40B99F23-CBDE-48E1-B71E-59DE2F7437A0": {
        "target": {
          "$CGW1": "cgw-vpn",
          "$VGW": "vgw-vpn"
        },
        "auto": true,
        "point": [],
        "type": "vpn"
      },
      "F5F203E4-6B77-4A08-B73F-9C29E2AE5ADD": {
        "target": {
          "$SUBNET0": "subnet-assoc-out",
          "$ROUTETABLE0": "rtb-src"
        },
        "auto": true,
        "point": [],
        "type": "association"
      },
      "29CCCE1E-36C0-43F1-A607-44CC495AD2EE": {
        "target": {
          "$LAUNCH-CONFIGURATION0": "launchconfig-sg",
          "$INSTANCE0": "instance-sg"
        },
        "auto": true,
        "point": [],
        "type": "sg"
      },
      "DA783FB7-5E14-4C8E-9554-5A6A7C2E4EA1": {
        "target": {
          "3E2E3F46-49C8-4541-A5F4-04D5219213A8": "launchconfig-sg",
          "$INSTANCE0": "instance-sg"
        },
        "auto": true,
        "point": [],
        "type": "sg"
      }
    }
  }
}
